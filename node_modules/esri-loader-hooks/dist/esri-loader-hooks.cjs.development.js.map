{"version":3,"file":"esri-loader-hooks.cjs.development.js","sources":["../src/utils/arcgis.ts","../src/hooks/view.ts","../src/hooks/graphics.ts","../src/hooks/handlers.ts"],"sourcesContent":["import { loadModules } from 'esri-loader';\n\n// is this a web map/scene?\nfunction isItem(map: any) {\n  return typeof map === 'string' || !!map.baseMap || !!map.operationalLayers;\n}\n\n// TODO: make this real\nexport interface ILoadViewOptions {\n  isScene?: boolean;\n  view?: any;\n  // [index: string]: any;\n}\n\nexport function loadView(map: any, options?: ILoadViewOptions) {\n  return isItem(map) ? loadItem(map, options) : loadMap(map, options);\n}\n\nexport function loadMap(mapProperties: any, options: ILoadViewOptions = {}) {\n  const viewModule = `esri/views/${options.isScene ? 'Scene' : 'Map'}View`;\n  return loadModules(['esri/Map', viewModule]).then(([Map, ViewClass]) => {\n    // then we create a map (or scene)\n    const map = new Map({ ...mapProperties });\n    // and return a view with that map (or scene)\n    const { view } = options;\n    return new ViewClass({\n      ...view,\n      map,\n    });\n  });\n}\n\nexport function loadItem(item: any, options: ILoadViewOptions = {}) {\n  const modules = options.isScene\n    ? ['esri/views/SceneView', 'esri/WebScene']\n    : ['esri/views/MapView', 'esri/WebMap'];\n  return loadModules(modules).then(([ViewClass, MapClass]) => {\n    // then we create a wem map (or scene) from the item\n    const map =\n      typeof item === 'string'\n        ? new MapClass({\n            portalItem: {\n              id: item,\n            },\n          })\n        : MapClass.fromJSON(item);\n    // and return a view with that web map (or scene)\n    const { view } = options;\n    return new ViewClass({\n      ...view,\n      map,\n    });\n  });\n}\n\nexport function destroyView(view: any) {\n  if (!view) {\n    return;\n  }\n  // undocumented way to destroy a view\n  view = view.container = null;\n}\n","import { useRef, useEffect, useState } from 'react';\nimport { loadView, destroyView, ILoadViewOptions } from '../utils/arcgis';\n\nexport function useWebMap(item: any, options?: ILoadViewOptions) {\n  return useView(item, options);\n}\n\nexport function useWebScene(item: any, options?: ILoadViewOptions) {\n  return useView(item, { ...options, isScene: true });\n}\n\nexport function useMap(map: any, options?: ILoadViewOptions) {\n  return useView(map, options);\n}\n\nexport function useScene(map: any, options?: ILoadViewOptions) {\n  return useView(map, { ...options, isScene: true });\n}\n\nfunction useView(map: any, options?: ILoadViewOptions) {\n  // create a ref to element to be used as the map's container\n  const elRef = useRef(null);\n  // hold on to the view in state\n  const [view, setView] = useState(null);\n  // use a ref so we can use initial values in a componentDidMount-like effect\n  // otherwise we'd get a lint error, or have to make it a dependency of the effect\n  // see: https://github.com/facebook/react/issues/15865#issuecomment-540715333\n  const initialArguments = useRef({ map, options });\n\n  // use a side effect to create the view after react has rendered the DOM\n  useEffect(() => {\n    // define local variables to be used in the clean up function\n    let cancelled = false;\n    let _view: any;\n    async function load() {\n      const { map, options } = initialArguments.current;\n      _view = await loadView(map, options);\n      if (cancelled) {\n        return;\n      }\n      // show the view at the element & add it to the state\n      _view.container = elRef.current;\n      setView(_view);\n    }\n    load();\n    return function cleanUp() {\n      // cancel any pending attempts to load the view\n      // see: https://juliangaramendy.dev/use-promise-subscription/\n      cancelled = true;\n      // clean up the map view\n      destroyView(_view);\n    };\n  }, []); // similar to componentDidMount(), componentWillUnmount()\n\n  // return the ref and the view\n  return [elRef, view];\n}\n","import { useEffect } from 'react';\nimport { loadModules } from 'esri-loader';\n\nexport function useGraphics(view: any, jsonGraphics: any[]) {\n  useEffect(() => {\n    if (!view || !jsonGraphics) {\n      return;\n    }\n\n    let graphics: any[];\n    loadModules(['esri/Graphic']).then(([Graphic]) => {\n      graphics = jsonGraphics.map(jsonGraphic => new Graphic(jsonGraphic));\n      view.graphics.addMany(graphics);\n    });\n    return function removeGraphics() {\n      view && view.graphics.removeMany(graphics);\n    };\n  }, [view, jsonGraphics]);\n}\n\nexport function useGraphic(view: any, jsonGraphic: any) {\n  return useGraphics(view, [jsonGraphic]);\n}\n","import { useEffect } from 'react';\n\nexport function useEvents(\n  obj: any,\n  names: string[],\n  callback: (e: any) => void\n) {\n  useEffect(() => {\n    if (!obj) {\n      return;\n    }\n    const handles = names.map(name => obj.on(name, callback));\n    return function removeHandles() {\n      handles.forEach(handle => {\n        handle.remove();\n      });\n    };\n  }, [obj, names, callback]);\n}\n\nexport function useEvent(obj: any, name: string, callback: (e: any) => void) {\n  useEvents(obj, [name], callback);\n}\n\nexport function useWatches(obj: any, names: string[], callback: any) {\n  useEffect(() => {\n    if (!obj) {\n      return;\n    }\n    const handles = names.map(name => obj.watch(name, callback));\n    return function removeHandles() {\n      handles.forEach(handle => {\n        handle.remove();\n      });\n    };\n  }, [obj, names, callback]);\n}\n\nexport function useWatch(obj: any, name: string, callback: any) {\n  useWatches(obj, [name], callback);\n}\n"],"names":["isItem","map","baseMap","operationalLayers","loadView","options","loadItem","loadMap","mapProperties","viewModule","isScene","loadModules","then","Map","ViewClass","view","item","modules","MapClass","portalItem","id","fromJSON","destroyView","container","useWebMap","useView","useWebScene","useMap","useScene","elRef","useRef","useState","setView","initialArguments","useEffect","load","current","_view","cancelled","cleanUp","useGraphics","jsonGraphics","graphics","Graphic","jsonGraphic","addMany","removeGraphics","removeMany","useGraphic","useEvents","obj","names","callback","handles","name","on","removeHandles","forEach","handle","remove","useEvent","useWatches","watch","useWatch"],"mappings":"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"}